#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Travel_Website.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDatTour(ChiTietDatTour instance);
    partial void UpdateChiTietDatTour(ChiTietDatTour instance);
    partial void DeleteChiTietDatTour(ChiTietDatTour instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertChiTietTour(ChiTietTour instance);
    partial void UpdateChiTietTour(ChiTietTour instance);
    partial void DeleteChiTietTour(ChiTietTour instance);
    partial void InsertDatTour(DatTour instance);
    partial void UpdateDatTour(DatTour instance);
    partial void DeleteDatTour(DatTour instance);
    partial void InsertHinhAnhTinhThanh(HinhAnhTinhThanh instance);
    partial void UpdateHinhAnhTinhThanh(HinhAnhTinhThanh instance);
    partial void DeleteHinhAnhTinhThanh(HinhAnhTinhThanh instance);
    partial void InsertHoiVien(HoiVien instance);
    partial void UpdateHoiVien(HoiVien instance);
    partial void DeleteHoiVien(HoiVien instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiTour(LoaiTour instance);
    partial void UpdateLoaiTour(LoaiTour instance);
    partial void DeleteLoaiTour(LoaiTour instance);
    partial void InsertQuocGia(QuocGia instance);
    partial void UpdateQuocGia(QuocGia instance);
    partial void DeleteQuocGia(QuocGia instance);
    partial void InsertTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void UpdateTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void DeleteTaiKhoanAdmin(TaiKhoanAdmin instance);
    partial void InsertTinhThanh(TinhThanh instance);
    partial void UpdateTinhThanh(TinhThanh instance);
    partial void DeleteTinhThanh(TinhThanh instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDLConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this.GetTable<ChiTietDatTour>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTour> ChiTietTours
		{
			get
			{
				return this.GetTable<ChiTietTour>();
			}
		}
		
		public System.Data.Linq.Table<DatTour> DatTours
		{
			get
			{
				return this.GetTable<DatTour>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhTinhThanh> HinhAnhTinhThanhs
		{
			get
			{
				return this.GetTable<HinhAnhTinhThanh>();
			}
		}
		
		public System.Data.Linq.Table<HoiVien> HoiViens
		{
			get
			{
				return this.GetTable<HoiVien>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTour> LoaiTours
		{
			get
			{
				return this.GetTable<LoaiTour>();
			}
		}
		
		public System.Data.Linq.Table<QuocGia> QuocGias
		{
			get
			{
				return this.GetTable<QuocGia>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoanAdmin> TaiKhoanAdmins
		{
			get
			{
				return this.GetTable<TaiKhoanAdmin>();
			}
		}
		
		public System.Data.Linq.Table<TinhThanh> TinhThanhs
		{
			get
			{
				return this.GetTable<TinhThanh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDatTour")]
	public partial class ChiTietDatTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaChiTietDatTour;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<int> _MaDatTour;
		
		private EntityRef<DatTour> _DatTour;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaChiTietDatTourChanging(string value);
    partial void OnMaChiTietDatTourChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnMaDatTourChanging(System.Nullable<int> value);
    partial void OnMaDatTourChanged();
    #endregion
		
		public ChiTietDatTour()
		{
			this._DatTour = default(EntityRef<DatTour>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietDatTour", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaChiTietDatTour
		{
			get
			{
				return this._MaChiTietDatTour;
			}
			set
			{
				if ((this._MaChiTietDatTour != value))
				{
					this.OnMaChiTietDatTourChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDatTour = value;
					this.SendPropertyChanged("MaChiTietDatTour");
					this.OnMaChiTietDatTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatTour", DbType="Int")]
		public System.Nullable<int> MaDatTour
		{
			get
			{
				return this._MaDatTour;
			}
			set
			{
				if ((this._MaDatTour != value))
				{
					if (this._DatTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDatTourChanging(value);
					this.SendPropertyChanging();
					this._MaDatTour = value;
					this.SendPropertyChanged("MaDatTour");
					this.OnMaDatTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatTour_ChiTietDatTour", Storage="_DatTour", ThisKey="MaDatTour", OtherKey="ID", IsForeignKey=true)]
		public DatTour DatTour
		{
			get
			{
				return this._DatTour.Entity;
			}
			set
			{
				DatTour previousValue = this._DatTour.Entity;
				if (((previousValue != value) 
							|| (this._DatTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatTour.Entity = null;
						previousValue.ChiTietDatTours.Remove(this);
					}
					this._DatTour.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatTours.Add(this);
						this._MaDatTour = value.ID;
					}
					else
					{
						this._MaDatTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatTour", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="ID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietDatTours.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDatTours.Add(this);
						this._MaKhachHang = value.ID;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tour")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaTour;
		
		private string _TenTour;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<System.DateTime> _NgayKhoiHanh;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private System.Nullable<int> _SoCho;
		
		private string _NoiDung;
		
		private int _HinhAnh;
		
		private System.Nullable<int> _MaLoaiTour;
		
		private EntitySet<ChiTietTour> _ChiTietTours;
		
		private EntitySet<DatTour> _DatTours;
		
		private EntityRef<LoaiTour> _LoaiTour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaTourChanging(string value);
    partial void OnMaTourChanged();
    partial void OnTenTourChanging(string value);
    partial void OnTenTourChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnNgayKhoiHanhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKhoiHanhChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnSoChoChanging(System.Nullable<int> value);
    partial void OnSoChoChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnHinhAnhChanging(int value);
    partial void OnHinhAnhChanged();
    partial void OnMaLoaiTourChanging(System.Nullable<int> value);
    partial void OnMaLoaiTourChanged();
    #endregion
		
		public Tour()
		{
			this._ChiTietTours = new EntitySet<ChiTietTour>(new Action<ChiTietTour>(this.attach_ChiTietTours), new Action<ChiTietTour>(this.detach_ChiTietTours));
			this._DatTours = new EntitySet<DatTour>(new Action<DatTour>(this.attach_DatTours), new Action<DatTour>(this.detach_DatTours));
			this._LoaiTour = default(EntityRef<LoaiTour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTour", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string TenTour
		{
			get
			{
				return this._TenTour;
			}
			set
			{
				if ((this._TenTour != value))
				{
					this.OnTenTourChanging(value);
					this.SendPropertyChanging();
					this._TenTour = value;
					this.SendPropertyChanged("TenTour");
					this.OnTenTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKhoiHanh", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKhoiHanh
		{
			get
			{
				return this._NgayKhoiHanh;
			}
			set
			{
				if ((this._NgayKhoiHanh != value))
				{
					this.OnNgayKhoiHanhChanging(value);
					this.SendPropertyChanging();
					this._NgayKhoiHanh = value;
					this.SendPropertyChanged("NgayKhoiHanh");
					this.OnNgayKhoiHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCho", DbType="Int")]
		public System.Nullable<int> SoCho
		{
			get
			{
				return this._SoCho;
			}
			set
			{
				if ((this._SoCho != value))
				{
					this.OnSoChoChanging(value);
					this.SendPropertyChanging();
					this._SoCho = value;
					this.SendPropertyChanged("SoCho");
					this.OnSoChoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(1000)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Int NOT NULL")]
		public int HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", DbType="Int")]
		public System.Nullable<int> MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					if (this._LoaiTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_ChiTietTour", Storage="_ChiTietTours", ThisKey="ID", OtherKey="MaTour")]
		public EntitySet<ChiTietTour> ChiTietTours
		{
			get
			{
				return this._ChiTietTours;
			}
			set
			{
				this._ChiTietTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DatTour", Storage="_DatTours", ThisKey="ID", OtherKey="MaTour")]
		public EntitySet<DatTour> DatTours
		{
			get
			{
				return this._DatTours;
			}
			set
			{
				this._DatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_LoaiTour", ThisKey="MaLoaiTour", OtherKey="ID", IsForeignKey=true)]
		public LoaiTour LoaiTour
		{
			get
			{
				return this._LoaiTour.Entity;
			}
			set
			{
				LoaiTour previousValue = this._LoaiTour.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTour.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._LoaiTour.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._MaLoaiTour = value.ID;
					}
					else
					{
						this._MaLoaiTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTours(ChiTietTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_ChiTietTours(ChiTietTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
		
		private void attach_DatTours(DatTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_DatTours(DatTour entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTour")]
	public partial class ChiTietTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaChiTietTour;
		
		private System.Nullable<int> _MaTinhThanh;
		
		private System.Nullable<int> _MaTour;
		
		private EntityRef<Tour> _Tour;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaChiTietTourChanging(string value);
    partial void OnMaChiTietTourChanged();
    partial void OnMaTinhThanhChanging(System.Nullable<int> value);
    partial void OnMaTinhThanhChanged();
    partial void OnMaTourChanging(System.Nullable<int> value);
    partial void OnMaTourChanged();
    #endregion
		
		public ChiTietTour()
		{
			this._Tour = default(EntityRef<Tour>);
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietTour", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaChiTietTour
		{
			get
			{
				return this._MaChiTietTour;
			}
			set
			{
				if ((this._MaChiTietTour != value))
				{
					this.OnMaChiTietTourChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietTour = value;
					this.SendPropertyChanged("MaChiTietTour");
					this.OnMaChiTietTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhThanh", DbType="Int")]
		public System.Nullable<int> MaTinhThanh
		{
			get
			{
				return this._MaTinhThanh;
			}
			set
			{
				if ((this._MaTinhThanh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaTinhThanh = value;
					this.SendPropertyChanged("MaTinhThanh");
					this.OnMaTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int")]
		public System.Nullable<int> MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_ChiTietTour", Storage="_Tour", ThisKey="MaTour", OtherKey="ID", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.ChiTietTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.ChiTietTours.Add(this);
						this._MaTour = value.ID;
					}
					else
					{
						this._MaTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_ChiTietTour", Storage="_TinhThanh", ThisKey="MaTinhThanh", OtherKey="ID", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.ChiTietTours.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.ChiTietTours.Add(this);
						this._MaTinhThanh = value.ID;
					}
					else
					{
						this._MaTinhThanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatTour")]
	public partial class DatTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaDatTour;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<int> _SoCho;
		
		private System.Nullable<int> _ThanhTien;
		
		private System.Nullable<int> _ThanhToan;
		
		private System.Nullable<int> _MaTour;
		
		private EntitySet<ChiTietDatTour> _ChiTietDatTours;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaDatTourChanging(string value);
    partial void OnMaDatTourChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnSoChoChanging(System.Nullable<int> value);
    partial void OnSoChoChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnThanhToanChanging(System.Nullable<int> value);
    partial void OnThanhToanChanged();
    partial void OnMaTourChanging(System.Nullable<int> value);
    partial void OnMaTourChanged();
    #endregion
		
		public DatTour()
		{
			this._ChiTietDatTours = new EntitySet<ChiTietDatTour>(new Action<ChiTietDatTour>(this.attach_ChiTietDatTours), new Action<ChiTietDatTour>(this.detach_ChiTietDatTours));
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatTour", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaDatTour
		{
			get
			{
				return this._MaDatTour;
			}
			set
			{
				if ((this._MaDatTour != value))
				{
					this.OnMaDatTourChanging(value);
					this.SendPropertyChanging();
					this._MaDatTour = value;
					this.SendPropertyChanged("MaDatTour");
					this.OnMaDatTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCho", DbType="Int")]
		public System.Nullable<int> SoCho
		{
			get
			{
				return this._SoCho;
			}
			set
			{
				if ((this._SoCho != value))
				{
					this.OnSoChoChanging(value);
					this.SendPropertyChanging();
					this._SoCho = value;
					this.SendPropertyChanged("SoCho");
					this.OnSoChoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToan", DbType="Int")]
		public System.Nullable<int> ThanhToan
		{
			get
			{
				return this._ThanhToan;
			}
			set
			{
				if ((this._ThanhToan != value))
				{
					this.OnThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ThanhToan = value;
					this.SendPropertyChanged("ThanhToan");
					this.OnThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int")]
		public System.Nullable<int> MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatTour_ChiTietDatTour", Storage="_ChiTietDatTours", ThisKey="ID", OtherKey="MaDatTour")]
		public EntitySet<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this._ChiTietDatTours;
			}
			set
			{
				this._ChiTietDatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_DatTour", Storage="_Tour", ThisKey="MaTour", OtherKey="ID", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.DatTours.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.DatTours.Add(this);
						this._MaTour = value.ID;
					}
					else
					{
						this._MaTour = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.DatTour = this;
		}
		
		private void detach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.DatTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhTinhThanh")]
	public partial class HinhAnhTinhThanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaHinhAnhTinhThanh;
		
		private string _MoTa;
		
		private System.Nullable<int> _MaTinhThanh;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaHinhAnhTinhThanhChanging(string value);
    partial void OnMaHinhAnhTinhThanhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMaTinhThanhChanging(System.Nullable<int> value);
    partial void OnMaTinhThanhChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public HinhAnhTinhThanh()
		{
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHinhAnhTinhThanh", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaHinhAnhTinhThanh
		{
			get
			{
				return this._MaHinhAnhTinhThanh;
			}
			set
			{
				if ((this._MaHinhAnhTinhThanh != value))
				{
					this.OnMaHinhAnhTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaHinhAnhTinhThanh = value;
					this.SendPropertyChanged("MaHinhAnhTinhThanh");
					this.OnMaHinhAnhTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhThanh", DbType="Int")]
		public System.Nullable<int> MaTinhThanh
		{
			get
			{
				return this._MaTinhThanh;
			}
			set
			{
				if ((this._MaTinhThanh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaTinhThanh = value;
					this.SendPropertyChanged("MaTinhThanh");
					this.OnMaTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_HinhAnhTinhThanh", Storage="_TinhThanh", ThisKey="MaTinhThanh", OtherKey="ID", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.HinhAnhTinhThanhs.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.HinhAnhTinhThanhs.Add(this);
						this._MaTinhThanh = value.ID;
					}
					else
					{
						this._MaTinhThanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoiVien")]
	public partial class HoiVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaHoiVien;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<int> _MaKhachHang;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaHoiVienChanging(string value);
    partial void OnMaHoiVienChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    #endregion
		
		public HoiVien()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoiVien", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaHoiVien
		{
			get
			{
				return this._MaHoiVien;
			}
			set
			{
				if ((this._MaHoiVien != value))
				{
					this.OnMaHoiVienChanging(value);
					this.SendPropertyChanging();
					this._MaHoiVien = value;
					this.SendPropertyChanged("MaHoiVien");
					this.OnMaHoiVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(15)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoiVien", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="ID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoiViens.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoiViens.Add(this);
						this._MaKhachHang = value.ID;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaKhachHang;
		
		private string _Ten;
		
		private string _Tuoi;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private System.Nullable<int> _MaQuocGia;
		
		private EntitySet<ChiTietDatTour> _ChiTietDatTours;
		
		private EntitySet<HoiVien> _HoiViens;
		
		private EntityRef<QuocGia> _QuocGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnTuoiChanging(string value);
    partial void OnTuoiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMaQuocGiaChanging(System.Nullable<int> value);
    partial void OnMaQuocGiaChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietDatTours = new EntitySet<ChiTietDatTour>(new Action<ChiTietDatTour>(this.attach_ChiTietDatTours), new Action<ChiTietDatTour>(this.detach_ChiTietDatTours));
			this._HoiViens = new EntitySet<HoiVien>(new Action<HoiVien>(this.attach_HoiViens), new Action<HoiVien>(this.detach_HoiViens));
			this._QuocGia = default(EntityRef<QuocGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuoi", DbType="Char(3)")]
		public string Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", DbType="Int")]
		public System.Nullable<int> MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					if (this._QuocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietDatTour", Storage="_ChiTietDatTours", ThisKey="ID", OtherKey="MaKhachHang")]
		public EntitySet<ChiTietDatTour> ChiTietDatTours
		{
			get
			{
				return this._ChiTietDatTours;
			}
			set
			{
				this._ChiTietDatTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoiVien", Storage="_HoiViens", ThisKey="ID", OtherKey="MaKhachHang")]
		public EntitySet<HoiVien> HoiViens
		{
			get
			{
				return this._HoiViens;
			}
			set
			{
				this._HoiViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_KhachHang", Storage="_QuocGia", ThisKey="MaQuocGia", OtherKey="ID", IsForeignKey=true)]
		public QuocGia QuocGia
		{
			get
			{
				return this._QuocGia.Entity;
			}
			set
			{
				QuocGia previousValue = this._QuocGia.Entity;
				if (((previousValue != value) 
							|| (this._QuocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuocGia.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._QuocGia.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._MaQuocGia = value.ID;
					}
					else
					{
						this._MaQuocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuocGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietDatTours(ChiTietDatTour entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_HoiViens(HoiVien entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoiViens(HoiVien entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTour")]
	public partial class LoaiTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaLoaiTour;
		
		private string _TenLoaiTour;
		
		private string _Mota;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaLoaiTourChanging(string value);
    partial void OnMaLoaiTourChanged();
    partial void OnTenLoaiTourChanging(string value);
    partial void OnTenLoaiTourChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    #endregion
		
		public LoaiTour()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTour", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaLoaiTour
		{
			get
			{
				return this._MaLoaiTour;
			}
			set
			{
				if ((this._MaLoaiTour != value))
				{
					this.OnMaLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTour = value;
					this.SendPropertyChanged("MaLoaiTour");
					this.OnMaLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTour", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string TenLoaiTour
		{
			get
			{
				return this._TenLoaiTour;
			}
			set
			{
				if ((this._TenLoaiTour != value))
				{
					this.OnTenLoaiTourChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTour = value;
					this.SendPropertyChanged("TenLoaiTour");
					this.OnTenLoaiTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTour_Tour", Storage="_Tours", ThisKey="ID", OtherKey="MaLoaiTour")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuocGia")]
	public partial class QuocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaQuocGia;
		
		private string _TenQuocGia;
		
		private string _Mota;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaQuocGiaChanging(string value);
    partial void OnMaQuocGiaChanged();
    partial void OnTenQuocGiaChanging(string value);
    partial void OnTenQuocGiaChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    #endregion
		
		public QuocGia()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuocGia", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string TenQuocGia
		{
			get
			{
				return this._TenQuocGia;
			}
			set
			{
				if ((this._TenQuocGia != value))
				{
					this.OnTenQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._TenQuocGia = value;
					this.SendPropertyChanged("TenQuocGia");
					this.OnTenQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuocGia_KhachHang", Storage="_KhachHangs", ThisKey="ID", OtherKey="MaQuocGia")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.QuocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoanAdmin")]
	public partial class TaiKhoanAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaTaiKhoanAdmin;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaTaiKhoanAdminChanging(string value);
    partial void OnMaTaiKhoanAdminChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoanAdmin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoanAdmin", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaTaiKhoanAdmin
		{
			get
			{
				return this._MaTaiKhoanAdmin;
			}
			set
			{
				if ((this._MaTaiKhoanAdmin != value))
				{
					this.OnMaTaiKhoanAdminChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoanAdmin = value;
					this.SendPropertyChanged("MaTaiKhoanAdmin");
					this.OnMaTaiKhoanAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(15)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhThanh")]
	public partial class TinhThanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaTinhThanh;
		
		private string _TenTinhThanh;
		
		private string _MoTa;
		
		private EntitySet<ChiTietTour> _ChiTietTours;
		
		private EntitySet<HinhAnhTinhThanh> _HinhAnhTinhThanhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaTinhThanhChanging(string value);
    partial void OnMaTinhThanhChanged();
    partial void OnTenTinhThanhChanging(string value);
    partial void OnTenTinhThanhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public TinhThanh()
		{
			this._ChiTietTours = new EntitySet<ChiTietTour>(new Action<ChiTietTour>(this.attach_ChiTietTours), new Action<ChiTietTour>(this.detach_ChiTietTours));
			this._HinhAnhTinhThanhs = new EntitySet<HinhAnhTinhThanh>(new Action<HinhAnhTinhThanh>(this.attach_HinhAnhTinhThanhs), new Action<HinhAnhTinhThanh>(this.detach_HinhAnhTinhThanhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhThanh", AutoSync=AutoSync.Always, DbType="VarChar(5)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaTinhThanh
		{
			get
			{
				return this._MaTinhThanh;
			}
			set
			{
				if ((this._MaTinhThanh != value))
				{
					this.OnMaTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._MaTinhThanh = value;
					this.SendPropertyChanged("MaTinhThanh");
					this.OnMaTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhThanh", DbType="NVarChar(15)")]
		public string TenTinhThanh
		{
			get
			{
				return this._TenTinhThanh;
			}
			set
			{
				if ((this._TenTinhThanh != value))
				{
					this.OnTenTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._TenTinhThanh = value;
					this.SendPropertyChanged("TenTinhThanh");
					this.OnTenTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_ChiTietTour", Storage="_ChiTietTours", ThisKey="ID", OtherKey="MaTinhThanh")]
		public EntitySet<ChiTietTour> ChiTietTours
		{
			get
			{
				return this._ChiTietTours;
			}
			set
			{
				this._ChiTietTours.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_HinhAnhTinhThanh", Storage="_HinhAnhTinhThanhs", ThisKey="ID", OtherKey="MaTinhThanh")]
		public EntitySet<HinhAnhTinhThanh> HinhAnhTinhThanhs
		{
			get
			{
				return this._HinhAnhTinhThanhs;
			}
			set
			{
				this._HinhAnhTinhThanhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTours(ChiTietTour entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_ChiTietTours(ChiTietTour entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
		
		private void attach_HinhAnhTinhThanhs(HinhAnhTinhThanh entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_HinhAnhTinhThanhs(HinhAnhTinhThanh entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
	}
}
#pragma warning restore 1591
